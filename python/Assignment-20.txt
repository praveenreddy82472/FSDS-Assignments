1. Set the variable test1 to the string 'This is a test of the emergency text system,' and save test1 to a
file named test.txt.


test1= 'This is a test of the emergency text system.'
with open('test.txt', 'w') as file:
    file.write(test1)



2. Read the contents of the file test.txt into the variable test2. Is there a difference between test 1
and test 2?

# Read the content of test.txt into test2
with open('test.txt', 'r') as file:
    test2 = file.read()
test1 = 'This is a test of the emergency text system.'
# Check if there is a difference between test1 and test2
print("Test1:", test1)
print("Test2:", test2)

if test1 == test2:
    print("There is no difference between test1 and test2.")
else:
    print("There is a difference between test1 and test2.")



3. Create a CSV file called books.csv by using these lines:
title,author,year
The Weirdstone of Brisingamen,Alan Garner,1960
Perdido Street Station,China Miéville,2000
Thud!,Terry Pratchett,2005
The Spellman Files,Lisa Lutz,2007
Small Gods,Terry Pratchett,1992


import csv

# Data to be written to the CSV file
books = [
    ["title", "author", "year"],
    ["The Weirdstone of Brisingamen", "Alan Garner", 1960],
    ["Perdido Street Station", "China Miéville", 2000],
    ["Thud!", "Terry Pratchett", 2005],
    ["The Spellman Files", "Lisa Lutz", 2007],
    ["Small Gods", "Terry Pratchett", 1992]
]

# Writing data to books.csv
with open('books.csv', 'w', newline='') as file:
    writer = csv.writer(file)
    writer.writerows(books)




4. Use the sqlite3 module to create a SQLite database called books.db, and a table called books with
these fields: title (text), author (text), and year (integer).

import sqlite3

# Connect to the SQLite database (or create it if it doesn't exist)
conn = sqlite3.connect('books.db')

# Create a cursor object to execute SQL commands
cursor = conn.cursor()

# Create the 'books' table
cursor.execute('''
    CREATE TABLE IF NOT EXISTS books (
        title TEXT,
        author TEXT,
        year INTEGER
    )
''')

# Commit the changes and close the connection
conn.commit()
conn.close()


5. Read books.csv and insert its data into the book table.

import csv
import sqlite3

# Connect to the SQLite database
conn = sqlite3.connect('books.db')
cursor = conn.cursor()

# Read data from books.csv
with open('books.csv', 'r') as file:
    reader = csv.reader(file)
    next(reader)  # Skip the header row
    books_data = [(row[0], row[1], int(row[2])) for row in reader]

# Insert data into the 'books' table
cursor.executemany('INSERT INTO books (title, author, year) VALUES (?, ?, ?)', books_data)

# Commit the changes and close the connection
conn.commit()
conn.close()



6. Select and print the title column from the book table in alphabetical order.

import sqlite3

# Connect to the SQLite database
conn = sqlite3.connect('books.db')
cursor = conn.cursor()

# Select the title column from the books table in alphabetical order
cursor.execute('SELECT title FROM books ORDER BY title ASC')

# Fetch all results
titles = cursor.fetchall()

# Print each title
for title in titles:
    print(title[0])

# Close the connection
conn.close()


7. From the book table, select and print all columns in the order of publication.


import sqlite3

# Connect to the SQLite database
conn = sqlite3.connect('books.db')
cursor = conn.cursor()

# Select the title column from the books table in alphabetical order
cursor.execute('SELECT title, author, year FROM books ORDER BY year ASC')

# Fetch all results
titles = cursor.fetchall()

for book in books:
    print(f"Title: {book[0]}, Author: {book[1]}, Year: {book[2]}")

# Close the connection
conn.close()

8. Use the sqlalchemy module to connect to the sqlite3 database books.db that you just made in
exercise 6.


from sqlalchemy import create_engine

# Create an engine that connects to the SQLite database
engine = create_engine('sqlite:///books.db')

# Establish the connection
connection = engine.connect()

# Verify connection by printing a message
print("Connected to books.db successfully!")

# Close the connection after use
connection.close()


9. Install the Redis server and the Python redis library (pip install redis) on your computer. Create a
Redis hash called test with the fields count (1) and name ('Fester Bestertester'). Print all the fields for
test.

import redis

# Connect to the Redis server
r = redis.Redis(host='localhost', port=6379, db=0)

# Create a Redis hash called 'test'
r.hset('test', mapping={'count': 1, 'name': 'Fester Bestertester'})

# Retrieve and print all fields for the 'test' hash
test_fields = r.hgetall('test')

# Print the fields
for field, value in test_fields.items():
    print(f"{field.decode('utf-8')}: {value.decode('utf-8')}")



10. Increment the count field of test and print it.


import redis

# Connect to the Redis server
r = redis.Redis(host='localhost', port=6379, db=0)

# Increment the 'count' field of the 'test' hash
new_count = r.hincrby('test', 'count', 1)

# Print the updated count
print(f"Updated count: {new_count}")


